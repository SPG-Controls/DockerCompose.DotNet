version: '3.3'
services:
  nginx:
    image: spgcontrols/ui:4.4.18616-internal
    volumes:
    - type: bind
      source: ./nginx/nginx.conf
      target: /etc/nginx/nginx.conf
      read_only: True
    - type: bind
      source: ./nginx/.espasswd
      target: /opt/elk/.espasswd
      read_only: True
    - type: bind
      source: ./nginx/ssl
      target: /etc/nginx/ssl
      read_only: True
    - type: bind
      source: ./nginx/error.log
      target: /var/log/nginx/error.log
      read_only: False
    ports:
    - target: 5000
      published: 5000
    - target: 80
      published: 80
    - target: 7018
      published: 7018
    - target: 8881
      published: 8881
    - target: 8882
      published: 8882
    - target: 8883
      published: 8883
    - target: 58081
      published: 58081
    - target: 7016
      published: 7016
      protocol: tcp
      mode: host
    - target: 443
      published: 443
      protocol: tcp
      mode: host
    networks:
    - default
  kong:
    image: kong:2.2.1
    environment:
    - KONG_DATABASE=postgres
    - KONG_PG_HOST=postgres
    - KONG_PG_USER=kong
    - KONG_PG_PASSWORD=SpgControls01
    - KONG_PROXY_ACCESS_LOG=/dev/stdout
    - KONG_ADMIN_ACCESS_LOG=/dev/stdout
    - KONG_PROXY_ERROR_LOG=/dev/stderr
    - KONG_ADMIN_ERROR_LOG=/dev/stderr
    - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
    - target: 8000
      published: 8000
    - target: 8443
      published: 8443
    networks:
    - default
  konga:
    image: pantsel/konga:0.14.9
    environment:
    - NODE_ENV=production
    - TOKEN_SECRET=SpgControls01
    - DB_ADAPTER=postgres
    - DB_HOST=postgres
    - DB_USER=kong
    - DB_PASSWORD=SpgControls01
    - KONG_PG_USER=kong
    - KONG_PG_PASSWORD=SpgControls01
    - KONG_PROXY_ACCESS_LOG=/dev/stdout
    - KONG_ADMIN_ACCESS_LOG=/dev/stdout
    - KONG_PROXY_ERROR_LOG=/dev/stderr
    - KONG_ADMIN_ERROR_LOG=/dev/stderr
    - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
    - target: 1337
      published: 1337
    networks:
    - default
  minio:
    image: minio/minio:RELEASE.2020-12-03T05-49-24Z
    volumes:
      - data1-1:/data
    expose:
      - "9000"
    environment:
    - "MINIO_ACCESS_KEY=minioblah"
    - "MINIO_SECRET_KEY=minio123blah"
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  dockermonitor:
    image: spgcontrols/arco-installer:develop
    environment:
    - DOCKER_URL=unix://./var/run/docker.sock
    - ELASTIC_URIS=http://elasticsearch:9200
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
    - type: bind
      source: ./docker-compose.yml
      target: /app/docker-compose.yml
    ports:
    - target: 5001
      published: 5002
    deploy:
      placement:
        constraints:
        - node.role == manager

  arco-storage:
    image: spgcontrols/arcostorage:4.4.18616-internal
    environment:
    - PROVIDER=MySQL
    - VIEW_CONNECTION=Server=db;Database=ArcoDbView;Uid=root;Pwd=SpgControls01!@;
    - IMAGE_CONNECTION=Server=db;Database=ArcoDbImage;Uid=root;Pwd=SpgControls01!@;
    networks:
    - default

  registry:
    image: registry:2.7.1
    volumes:
    - type: volume
      source: regdata1
      target: /var/lib/registry
    ports:
    - target: 5000
      published: 8889
    networks:
    - default
    deploy:
      placement:
        constraints:
        - node.role == manager
      labels:
        com.spg.name: Registry
        com.spg.icon: 4c21fdc5-0ddd-3b2b-4272-e73b022ba5c2

  arcoservice:
    image: spgcontrols/arcoservice:4.4.18616-internal
    environment:
    - PROVIDER=MySQL
    - SQL_CONNECTION=Server=db;Database=ArcoDb;Uid=root;Pwd=SpgControls01!@;
    - STATUS_CONNECTION=Server=db;Database=ArcoDbStatus;Uid=root;Pwd=SpgControls01!@;
    - VIEW_CONNECTION=Server=db;Database=ArcoDbView;Uid=root;Pwd=SpgControls01!@;
    - STATUSVIEW_CONNECTION=Server=db;Database=ArcoDbStatusView;Uid=root;Pwd=SpgControls01!@;
    - IMAGE_CONNECTION=Server=db;Database=ArcoDbImage;Uid=root;Pwd=SpgControls01!@;
    - ACTION_CONNECTION=Server=db;Database=ArcoDbAction;Uid=root;Pwd=SpgControls01!@;
    - ARCO_SECRETKEY="ChicoChicoGrande!"
    - ELASTIC_URIS=http://elasticsearch:9200
    - REDIS_URIS=redis:6379
    volumes:
    - type: bind
      source: ./license.txt
      target: /app/license.txt
      read_only: True
    depends_on:
    - db
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
  redis:
    image: redis:6.0.6
    deploy:
      labels:
        com.spg.name: Redis
        com.spg.icon: 674411e1-a145-5b82-862f-8727ae63bce4
  redis-commander:
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
  identity:
    image: spgcontrols/identityserver:4.4.18616-internal
    environment:
    - VIEW_CONNECTION=Server=db;Database=ArcoDbView;Uid=root;Pwd=SpgControls01!@;
    networks:
    - default
    deploy:
      replicas: 1
  gateway_s1000:
    image: spgcontrols/gateway.s1000:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    - ELASTIC_URIS=http://elasticsearch:9200
    - CERT=server.pfx
    - CERTPASS=s1000
    volumes:
    - type: bind
      source: ./appsettings-s1000.json
      target: /app/appsettings.json
    - type: bind
      source: ./s1000-gateway/server.pfx
      target: /app/server.pfx
      read_only: True
    ports:
    - target: 7016
      published: 7017
      protocol: host
    depends_on:
    - arcoservice
    deploy:
      replicas: 1
  gateway_contactid:
    image: spgcontrols/gateway.contactid.out:4.4.18616-internal
    command:
    - --verbose
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    - ELASTIC_URIS=http://elasticsearch:9200
    volumes:
    - type: bind
      source: ./appsettings-cid.json
      target: /app/appsettings.json
    ports:
    - target: 1024
      published: 1024
      protocol: host
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  gateway_pushy:
    image: spgcontrols/gateway.pushy:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  gateway_sbs:
    image: spgcontrols/gateway.sbs:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  gateway_smtp:
    image: spgcontrols/gateway.smtp:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  gateway_sip:
    image: spgcontrols/gateway.sip:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    - SIP_CALLBACK_ADDRESS=gateway_sip
    - SIP_CALLBACK_PORT=5060
    volumes:
    - type: bind
      source: ./appsettings-sip.json
      target: /app/appsettings.json
    ports:
    - target: 5060
      published: 5060
      protocol: host
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  gateway_video:
    image: spgcontrols/gateway.video:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    - ARCO_USER=gateway
    - ARCO_PASSWORD=Z2dWnPa
    depends_on:
    - arcoservice
    networks:
    - default
    deploy:
      replicas: 1
  videoservice:
    image: spgcontrols/videoservice:4.4.18616-internal
    environment:
    - ARCO_ADDRESS=http://arcoservice:5000
    volumes:
    - type: volume
      source: recdata1
      target: /app/records
  video-proxy:
    image: spgcontrols/video-proxy:4.4.18616-internal
    environment:
    - SERVER_PUBLIC=true
    - ARCO_ADDRESS=http://arcoservice:5000
    - VIDEO_ADDRESS=ws://videoservice:8082
    volumes:
    - type: bind
      source: ./video-proxy/index.js
      target: /app/index.js
      read_only: True
  simulator_sbs:
    image: spgcontrols/simulator.sbs:4.4.18616-internal
    volumes:
    - type: bind
      source: ./sbs/test-system-config.json
      target: /app/test-system-config.json
    ports:
    - target: 80
      published: 8884
    networks:
    - default
    deploy:
      replicas: 1

  db:
    image: mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-connect='SET NAMES UTF8;' --innodb-flush-log-at-trx-commit=0
    volumes:
      - dbdata1:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=SpgControls01!@
    ports:
      - '3306:3306'
    restart: always
    deploy:
      replicas: 1
      labels:
        com.spg.name: 'MySQL'
        com.spg.icon: '8f4061d1-5b27-4e4f-94c5-d904339bd102'

  postgres:
    image: postgres:11.10
    environment:
    - POSTGRES_USER=kong
    - POSTGRES_DB=kong
    - POSTGRES_PASSWORD=SpgControls01
    volumes:
    - type: volume
      source: dbdata2
      target: /var/lib/postgresql/data
    ports:
    - target: 5432
      published: 5432
    networks:
    - default
  elasticsearch:
    image: elasticsearch:7.9.1
    environment:
    - discovery.type=single-node
    volumes:
    - type: volume
      source: esdata1
      target: /usr/share/elasticsearch/data
    deploy:
      resources:
        reservations:
          memory: 4G
      labels:
        com.spg.name: Elasticsearch
        com.spg.icon: 163ae245-5296-f9aa-5ce8-0da844f3df0d
  kibana:
    image: kibana:7.9.1
    deploy:
      labels:
        com.spg.name: Kibana
        com.spg.icon: d6fd2852-13f6-63af-fc73-ee7c02ef8fb5
  metricbeat:
    image: spgcontrols/metricbeat:4.4.18616-internal
    hostname: metricbeat
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
    - type: bind
      source: /sys/fs/cgroup
      target: /hostfs/sys/fs/cgroup
      read_only: True
    - type: bind
      source: /proc
      target: /hostfs/proc
      read_only: True
    - type: bind
      source: /
      target: /hostfs
      read_only: True
    depends_on:
    - elasticsearch
    deploy:
      replicas: 1
      labels:
        com.spg.name: Metricbeat
        com.spg.icon: 20f6ac47-2206-fa18-3d0c-f65f34904ad6
networks:
  default:
    driver: overlay
    attachable: true
volumes:
  esdata1:
    driver: local
  dbdata1:
    driver: local
  dbdata2:
    driver: local
  recdata1:
    driver: local
  regdata1:
    driver: local
  data1-1:
    driver: local
configs:
  docker_compose.2:
    file: docker-compose.yml
